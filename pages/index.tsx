import type { NextPage } from "next";
import dynamic from "next/dynamic";
import Head from "next/head";
import Image from "next/image";
import React, { Suspense, useEffect } from "react";
import { Hydrate, useMutation, useQueries, useQuery } from "react-query";
import Exam from "../components/exam";
import Exam2 from "../components/exam2";
import loading from "../components/loading";
// import Exam from "../components/exam";
import Loading from "../components/loading";
import { fetchJobData, fetchOneUser, fetData, putData } from "../modules/api";
import { ExamType, ExamType2, ExamType3 } from "../modules/type";
import { queryClient } from "./_app";

const Home: NextPage = () => {
    const { isLoading: firstLoading, data: firstData } = useQuery<ExamType>(
        "exam",
        fetData,
        {
            refetchOnWindowFocus: false,
            retry: 0,
        },
    );

    const { isLoading: jobLoading, data: jobData } = useQuery<ExamType2>(
        "job",
        fetchJobData,
        {
            refetchOnWindowFocus: false,
            retry: 0,
            enabled: !!firstData,
        },
    );

    const { isLoading: userLoading, data: userData } = useQuery<ExamType3>(
        ["user", "1234"],
        (params) => {
            return fetchOneUser(params.queryKey[1]);
        },
        {
            refetchOnWindowFocus: false,
            retry: 0,
            enabled: !!jobData,
        },
    );
    // const result = useQueries([
    //     {
    //         queryKey: "exam",
    //         queryFn: fetData,
    //         refetchOnWindowFocus: false,
    //         retry: 0,
    //     },
    //     {
    //         queryKey: "job",
    //         queryFn: fetchJobData,
    //         refetchOnWindowFocus: false,
    //         retry: 0,
    //     },
    // ]);

    const putEmail = useMutation(putData, {
        onSettled: () => {
            console.log("end");
        },
        onSuccess: (data) => {
            queryClient.invalidateQueries("exam");
        },
    });

    return (
        <div>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            {/* {!firstLoading ? (
                <Exam data={firstData} />
            ) : (
                <Loading seq="first" />
            )} */}
            <Exam data={firstData} />
            <button
                onClick={() => {
                    putEmail.mutate();
                }}>
                email 변경
            </button>
            {!jobLoading ? <Exam2 data={jobData} /> : <Loading seq="job" />}
            {!userLoading ? (
                <>
                    <p>name : {userData?.name}</p>
                    <p>email : {userData?.email}</p>
                </>
            ) : (
                <Loading seq="user" />
            )}
        </div>
    );
};

export default Home;
